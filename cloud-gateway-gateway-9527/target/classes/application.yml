server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          #开启从注册中心动态创建路由的功能，利用微服务名来进行路由
          enabled: true

      routes:
        - id: payment_routh_8006 #payment_route #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8006          #匹配后提供服务的路由地址
          # uri的协议为lb,表示启用Gateway的负载均衡功能
          # lb://serviceName 是spring cloud gateway 在微服务中自动为我们创建的负载均衡的uri
          uri: lb://cloud-ribbon-payment-service
          # Filter过滤
          filters:
            # 路由转发的时候，会为相应的uri加上请求头X-Request-red=blue
            - AddRequestHeader=X-Request-red, blue
            # 路由转发的时候，会为相应的uri加上请求参数red=blue
            - AddRequestParameter=red, blue
          predicates:
            - Path=/payment/get/**,/payment/loadBalance         # 断言，路径相匹配的进行路由
            # 表明在这个时间之后，才可以通过网关访问服务
            #- After=2021-10-19T23:15:20.621+08:00[Asia/Shanghai]
            # 表明在这个时间之前，才可以通过网关访问服务
            #- Before=2021-10-19T23:15:20.621+08:00[Asia/Shanghai]
            # 表明在这个时间段之间，才可以通过网关访问服务
            #- Between=2021-10-19T23:15:20.621+08:00[Asia/Shanghai],2021-10-19T23:30:20.621+08:00[Asia/Shanghai]
            # 必须携带Cookie为username=lu,才能通过网关访问服务
            #- Cookie=username,lu
            # 请求头要有X-Request-Id属性并且值为整数的正则表达式
            #- Header=X-Request-Id, \d+
            #- Host=**.somehost.org,**.anotherhost.org
            # 表示网关通过get请求或post请求都可以访问
            - Method=GET,POST
            #- Query=age, \d+  # 要有请求参数，名age并且值还要是整数才能路由

        - id: payment_routh_8007 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8007       #匹配后提供服务的路由地址
          uri: lb://cloud-ribbon-payment-service
          # Filter过滤
          filters:
            # 路由转发的时候，会为相应的uri加上请求头X-Request-red=blue
            - AddRequestHeader=X-Request-red, blue
            # 路由转发的时候，会为相应的uri加上请求参数red=blue
            - AddRequestParameter=red, blue
          predicates:
            - Path=/payment/get/**,/payment/loadBalance         # 断言，路径相匹配的进行路由
            # 表明在这个时间之后，才可以通过网关访问服务
            #- After=2021-10-19T23:15:20.621+08:00[Asia/Shanghai]
            # 表明在这个时间之前，才可以通过网关访问服务
            #- Before=2021-10-19T23:15:20.621+08:00[Asia/Shanghai]
            # 表明在这个时间段之间，才可以通过网关访问服务
            #- Between=2021-10-19T23:15:20.621+08:00[Asia/Shanghai],2021-10-19T23:30:20.621+08:00[Asia/Shanghai]
            # 必须携带Cookie为username=lu,才能通过网关访问服务
            #- Cookie=username,lu
            # 请求头要有X-Request-Id属性并且值为整数的正则表达式
            #- Header=X-Request-Id, \d+
            #- Host=**.somehost.org,**.anotherhost.org
            # 表示网关通过get请求或post请求都可以访问
            - Method=GET,POST
            #- Query=age, \d+  # 要有请求参数，名age并且值还要是整数才能路由

        - id: payment_routh_8008
          # uri: http://localhost:8008
          uri: lb://cloud-ribbon-payment-service
          # Filter过滤
          filters:
            # 路由转发的时候，会为相应的uri加上请求头X-Request-red=blue
            - AddRequestHeader=X-Request-red, blue
            # 路由转发的时候，会为相应的uri加上请求参数red=blue
            - AddRequestParameter=red, blue
          predicates:
            - Path=/payment/get/**,/payment/loadBalance
            # 表明在这个时间之后，才可以通过网关访问服务
            #- After=2021-10-19T23:15:20.621+08:00[Asia/Shanghai]
            # 表明在这个时间之前，才可以通过网关访问服务
            #- Before=2021-10-19T23:15:20.621+08:00[Asia/Shanghai]
            # 表明在这个时间段之间，才可以通过网关访问服务
            #- Between=2021-10-19T23:15:20.621+08:00[Asia/Shanghai],2021-10-19T23:30:20.621+08:00[Asia/Shanghai]
            # 必须携带Cookie为username=lu,才能通过网关访问服务
            #- Cookie=username,lu
            # 请求头要有X-Request-Id属性并且值为整数的正则表达式
            #- Header=X-Request-Id, \d+
            #- Host=**.somehost.org,**.anotherhost.org
            # 表示网关通过get请求或post请求都可以访问
            - Method=GET,POST
            #- Query=age, \d+  # 要有请求参数，名age并且值还要是整数才能路由

eureka:
  instance:
    hostname: cloud-gateway-service
  client: #服务提供者provider注册进eureka服务列表内
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://localhost:7004/eureka